// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: avisio_ivi.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_avisio_5fivi_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_avisio_5fivi_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_avisio_5fivi_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_avisio_5fivi_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_avisio_5fivi_2eproto;
namespace avisio_ivi {
class PrimaryVehicleState;
struct PrimaryVehicleStateDefaultTypeInternal;
extern PrimaryVehicleStateDefaultTypeInternal _PrimaryVehicleState_default_instance_;
class SafetyStatus;
struct SafetyStatusDefaultTypeInternal;
extern SafetyStatusDefaultTypeInternal _SafetyStatus_default_instance_;
class SignalLightingStatus;
struct SignalLightingStatusDefaultTypeInternal;
extern SignalLightingStatusDefaultTypeInternal _SignalLightingStatus_default_instance_;
}  // namespace avisio_ivi
PROTOBUF_NAMESPACE_OPEN
template<> ::avisio_ivi::PrimaryVehicleState* Arena::CreateMaybeMessage<::avisio_ivi::PrimaryVehicleState>(Arena*);
template<> ::avisio_ivi::SafetyStatus* Arena::CreateMaybeMessage<::avisio_ivi::SafetyStatus>(Arena*);
template<> ::avisio_ivi::SignalLightingStatus* Arena::CreateMaybeMessage<::avisio_ivi::SignalLightingStatus>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace avisio_ivi {

enum Gear : int {
  GEAR_NEUTRAL = 0,
  GEAR_FIRST = 1,
  GEAR_SECOND = 2,
  GEAR_THIRD = 3,
  GEAR_FOURTH = 4,
  GEAR_FIFTH = 5,
  GEAR_SIXTH = 6,
  GEAR_REVERSE = 7,
  Gear_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  Gear_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool Gear_IsValid(int value);
constexpr Gear Gear_MIN = GEAR_NEUTRAL;
constexpr Gear Gear_MAX = GEAR_REVERSE;
constexpr int Gear_ARRAYSIZE = Gear_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Gear_descriptor();
template<typename T>
inline const std::string& Gear_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Gear>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Gear_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    Gear_descriptor(), enum_t_value);
}
inline bool Gear_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, Gear* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Gear>(
    Gear_descriptor(), name, value);
}
enum LightStatus : int {
  LIGHTS_OFF = 0,
  LIGHTS_ON = 1,
  LIGHTS_AUTO = 2,
  LightStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  LightStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool LightStatus_IsValid(int value);
constexpr LightStatus LightStatus_MIN = LIGHTS_OFF;
constexpr LightStatus LightStatus_MAX = LIGHTS_AUTO;
constexpr int LightStatus_ARRAYSIZE = LightStatus_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LightStatus_descriptor();
template<typename T>
inline const std::string& LightStatus_Name(T enum_t_value) {
  static_assert(::std::is_same<T, LightStatus>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function LightStatus_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    LightStatus_descriptor(), enum_t_value);
}
inline bool LightStatus_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, LightStatus* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<LightStatus>(
    LightStatus_descriptor(), name, value);
}
// ===================================================================

class PrimaryVehicleState final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:avisio_ivi.PrimaryVehicleState) */ {
 public:
  inline PrimaryVehicleState() : PrimaryVehicleState(nullptr) {}
  ~PrimaryVehicleState() override;
  explicit PROTOBUF_CONSTEXPR PrimaryVehicleState(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PrimaryVehicleState(const PrimaryVehicleState& from);
  PrimaryVehicleState(PrimaryVehicleState&& from) noexcept
    : PrimaryVehicleState() {
    *this = ::std::move(from);
  }

  inline PrimaryVehicleState& operator=(const PrimaryVehicleState& from) {
    CopyFrom(from);
    return *this;
  }
  inline PrimaryVehicleState& operator=(PrimaryVehicleState&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PrimaryVehicleState& default_instance() {
    return *internal_default_instance();
  }
  static inline const PrimaryVehicleState* internal_default_instance() {
    return reinterpret_cast<const PrimaryVehicleState*>(
               &_PrimaryVehicleState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PrimaryVehicleState& a, PrimaryVehicleState& b) {
    a.Swap(&b);
  }
  inline void Swap(PrimaryVehicleState* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PrimaryVehicleState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PrimaryVehicleState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PrimaryVehicleState>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PrimaryVehicleState& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PrimaryVehicleState& from) {
    PrimaryVehicleState::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PrimaryVehicleState* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "avisio_ivi.PrimaryVehicleState";
  }
  protected:
  explicit PrimaryVehicleState(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTimestampMsFieldNumber = 1,
    kSpeedKmhFieldNumber = 2,
    kEngineRpmFieldNumber = 3,
    kCurrentGearFieldNumber = 4,
    kBatteryLevelFieldNumber = 6,
    kEngineTempCFieldNumber = 7,
    kExteriorLightsStatusFieldNumber = 9,
    kCabinTempCFieldNumber = 10,
    kIsChargingFieldNumber = 8,
    kAcOnFieldNumber = 11,
    kTurnSignalLeftFieldNumber = 12,
    kTurnSignalRightFieldNumber = 13,
    kHazardLightsOnFieldNumber = 14,
  };
  // uint32 timestamp_ms = 1;
  void clear_timestamp_ms();
  uint32_t timestamp_ms() const;
  void set_timestamp_ms(uint32_t value);
  private:
  uint32_t _internal_timestamp_ms() const;
  void _internal_set_timestamp_ms(uint32_t value);
  public:

  // uint32 speed_kmh = 2;
  void clear_speed_kmh();
  uint32_t speed_kmh() const;
  void set_speed_kmh(uint32_t value);
  private:
  uint32_t _internal_speed_kmh() const;
  void _internal_set_speed_kmh(uint32_t value);
  public:

  // uint32 engine_rpm = 3;
  void clear_engine_rpm();
  uint32_t engine_rpm() const;
  void set_engine_rpm(uint32_t value);
  private:
  uint32_t _internal_engine_rpm() const;
  void _internal_set_engine_rpm(uint32_t value);
  public:

  // .avisio_ivi.Gear current_gear = 4;
  void clear_current_gear();
  ::avisio_ivi::Gear current_gear() const;
  void set_current_gear(::avisio_ivi::Gear value);
  private:
  ::avisio_ivi::Gear _internal_current_gear() const;
  void _internal_set_current_gear(::avisio_ivi::Gear value);
  public:

  // uint32 battery_level = 6;
  void clear_battery_level();
  uint32_t battery_level() const;
  void set_battery_level(uint32_t value);
  private:
  uint32_t _internal_battery_level() const;
  void _internal_set_battery_level(uint32_t value);
  public:

  // int32 engine_temp_c = 7;
  void clear_engine_temp_c();
  int32_t engine_temp_c() const;
  void set_engine_temp_c(int32_t value);
  private:
  int32_t _internal_engine_temp_c() const;
  void _internal_set_engine_temp_c(int32_t value);
  public:

  // .avisio_ivi.LightStatus exterior_lights_status = 9;
  void clear_exterior_lights_status();
  ::avisio_ivi::LightStatus exterior_lights_status() const;
  void set_exterior_lights_status(::avisio_ivi::LightStatus value);
  private:
  ::avisio_ivi::LightStatus _internal_exterior_lights_status() const;
  void _internal_set_exterior_lights_status(::avisio_ivi::LightStatus value);
  public:

  // int32 cabin_temp_c = 10;
  void clear_cabin_temp_c();
  int32_t cabin_temp_c() const;
  void set_cabin_temp_c(int32_t value);
  private:
  int32_t _internal_cabin_temp_c() const;
  void _internal_set_cabin_temp_c(int32_t value);
  public:

  // bool is_charging = 8;
  void clear_is_charging();
  bool is_charging() const;
  void set_is_charging(bool value);
  private:
  bool _internal_is_charging() const;
  void _internal_set_is_charging(bool value);
  public:

  // bool ac_on = 11;
  void clear_ac_on();
  bool ac_on() const;
  void set_ac_on(bool value);
  private:
  bool _internal_ac_on() const;
  void _internal_set_ac_on(bool value);
  public:

  // bool turn_signal_left = 12;
  void clear_turn_signal_left();
  bool turn_signal_left() const;
  void set_turn_signal_left(bool value);
  private:
  bool _internal_turn_signal_left() const;
  void _internal_set_turn_signal_left(bool value);
  public:

  // bool turn_signal_right = 13;
  void clear_turn_signal_right();
  bool turn_signal_right() const;
  void set_turn_signal_right(bool value);
  private:
  bool _internal_turn_signal_right() const;
  void _internal_set_turn_signal_right(bool value);
  public:

  // bool hazard_lights_on = 14;
  void clear_hazard_lights_on();
  bool hazard_lights_on() const;
  void set_hazard_lights_on(bool value);
  private:
  bool _internal_hazard_lights_on() const;
  void _internal_set_hazard_lights_on(bool value);
  public:

  // @@protoc_insertion_point(class_scope:avisio_ivi.PrimaryVehicleState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    uint32_t timestamp_ms_;
    uint32_t speed_kmh_;
    uint32_t engine_rpm_;
    int current_gear_;
    uint32_t battery_level_;
    int32_t engine_temp_c_;
    int exterior_lights_status_;
    int32_t cabin_temp_c_;
    bool is_charging_;
    bool ac_on_;
    bool turn_signal_left_;
    bool turn_signal_right_;
    bool hazard_lights_on_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_avisio_5fivi_2eproto;
};
// -------------------------------------------------------------------

class SignalLightingStatus final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:avisio_ivi.SignalLightingStatus) */ {
 public:
  inline SignalLightingStatus() : SignalLightingStatus(nullptr) {}
  ~SignalLightingStatus() override;
  explicit PROTOBUF_CONSTEXPR SignalLightingStatus(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SignalLightingStatus(const SignalLightingStatus& from);
  SignalLightingStatus(SignalLightingStatus&& from) noexcept
    : SignalLightingStatus() {
    *this = ::std::move(from);
  }

  inline SignalLightingStatus& operator=(const SignalLightingStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline SignalLightingStatus& operator=(SignalLightingStatus&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SignalLightingStatus& default_instance() {
    return *internal_default_instance();
  }
  static inline const SignalLightingStatus* internal_default_instance() {
    return reinterpret_cast<const SignalLightingStatus*>(
               &_SignalLightingStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SignalLightingStatus& a, SignalLightingStatus& b) {
    a.Swap(&b);
  }
  inline void Swap(SignalLightingStatus* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SignalLightingStatus* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SignalLightingStatus* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SignalLightingStatus>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SignalLightingStatus& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SignalLightingStatus& from) {
    SignalLightingStatus::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SignalLightingStatus* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "avisio_ivi.SignalLightingStatus";
  }
  protected:
  explicit SignalLightingStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTimestampMsFieldNumber = 1,
    kTurnSignalsFieldNumber = 2,
    kExteriorLightsFieldNumber = 3,
  };
  // uint32 timestamp_ms = 1;
  void clear_timestamp_ms();
  uint32_t timestamp_ms() const;
  void set_timestamp_ms(uint32_t value);
  private:
  uint32_t _internal_timestamp_ms() const;
  void _internal_set_timestamp_ms(uint32_t value);
  public:

  // uint32 turn_signals = 2;
  void clear_turn_signals();
  uint32_t turn_signals() const;
  void set_turn_signals(uint32_t value);
  private:
  uint32_t _internal_turn_signals() const;
  void _internal_set_turn_signals(uint32_t value);
  public:

  // uint32 exterior_lights = 3;
  void clear_exterior_lights();
  uint32_t exterior_lights() const;
  void set_exterior_lights(uint32_t value);
  private:
  uint32_t _internal_exterior_lights() const;
  void _internal_set_exterior_lights(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:avisio_ivi.SignalLightingStatus)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    uint32_t timestamp_ms_;
    uint32_t turn_signals_;
    uint32_t exterior_lights_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_avisio_5fivi_2eproto;
};
// -------------------------------------------------------------------

class SafetyStatus final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:avisio_ivi.SafetyStatus) */ {
 public:
  inline SafetyStatus() : SafetyStatus(nullptr) {}
  ~SafetyStatus() override;
  explicit PROTOBUF_CONSTEXPR SafetyStatus(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SafetyStatus(const SafetyStatus& from);
  SafetyStatus(SafetyStatus&& from) noexcept
    : SafetyStatus() {
    *this = ::std::move(from);
  }

  inline SafetyStatus& operator=(const SafetyStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline SafetyStatus& operator=(SafetyStatus&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SafetyStatus& default_instance() {
    return *internal_default_instance();
  }
  static inline const SafetyStatus* internal_default_instance() {
    return reinterpret_cast<const SafetyStatus*>(
               &_SafetyStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(SafetyStatus& a, SafetyStatus& b) {
    a.Swap(&b);
  }
  inline void Swap(SafetyStatus* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SafetyStatus* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SafetyStatus* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SafetyStatus>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SafetyStatus& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SafetyStatus& from) {
    SafetyStatus::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SafetyStatus* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "avisio_ivi.SafetyStatus";
  }
  protected:
  explicit SafetyStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTimestampMsFieldNumber = 1,
    kSeatbeltFastenedFieldNumber = 2,
    kAirbagOkFieldNumber = 3,
    kAbsActiveFieldNumber = 4,
    kTractionControlFieldNumber = 5,
  };
  // uint32 timestamp_ms = 1;
  void clear_timestamp_ms();
  uint32_t timestamp_ms() const;
  void set_timestamp_ms(uint32_t value);
  private:
  uint32_t _internal_timestamp_ms() const;
  void _internal_set_timestamp_ms(uint32_t value);
  public:

  // bool seatbelt_fastened = 2;
  void clear_seatbelt_fastened();
  bool seatbelt_fastened() const;
  void set_seatbelt_fastened(bool value);
  private:
  bool _internal_seatbelt_fastened() const;
  void _internal_set_seatbelt_fastened(bool value);
  public:

  // bool airbag_ok = 3;
  void clear_airbag_ok();
  bool airbag_ok() const;
  void set_airbag_ok(bool value);
  private:
  bool _internal_airbag_ok() const;
  void _internal_set_airbag_ok(bool value);
  public:

  // bool abs_active = 4;
  void clear_abs_active();
  bool abs_active() const;
  void set_abs_active(bool value);
  private:
  bool _internal_abs_active() const;
  void _internal_set_abs_active(bool value);
  public:

  // bool traction_control = 5;
  void clear_traction_control();
  bool traction_control() const;
  void set_traction_control(bool value);
  private:
  bool _internal_traction_control() const;
  void _internal_set_traction_control(bool value);
  public:

  // @@protoc_insertion_point(class_scope:avisio_ivi.SafetyStatus)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    uint32_t timestamp_ms_;
    bool seatbelt_fastened_;
    bool airbag_ok_;
    bool abs_active_;
    bool traction_control_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_avisio_5fivi_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PrimaryVehicleState

// uint32 timestamp_ms = 1;
inline void PrimaryVehicleState::clear_timestamp_ms() {
  _impl_.timestamp_ms_ = 0u;
}
inline uint32_t PrimaryVehicleState::_internal_timestamp_ms() const {
  return _impl_.timestamp_ms_;
}
inline uint32_t PrimaryVehicleState::timestamp_ms() const {
  // @@protoc_insertion_point(field_get:avisio_ivi.PrimaryVehicleState.timestamp_ms)
  return _internal_timestamp_ms();
}
inline void PrimaryVehicleState::_internal_set_timestamp_ms(uint32_t value) {
  
  _impl_.timestamp_ms_ = value;
}
inline void PrimaryVehicleState::set_timestamp_ms(uint32_t value) {
  _internal_set_timestamp_ms(value);
  // @@protoc_insertion_point(field_set:avisio_ivi.PrimaryVehicleState.timestamp_ms)
}

// uint32 speed_kmh = 2;
inline void PrimaryVehicleState::clear_speed_kmh() {
  _impl_.speed_kmh_ = 0u;
}
inline uint32_t PrimaryVehicleState::_internal_speed_kmh() const {
  return _impl_.speed_kmh_;
}
inline uint32_t PrimaryVehicleState::speed_kmh() const {
  // @@protoc_insertion_point(field_get:avisio_ivi.PrimaryVehicleState.speed_kmh)
  return _internal_speed_kmh();
}
inline void PrimaryVehicleState::_internal_set_speed_kmh(uint32_t value) {
  
  _impl_.speed_kmh_ = value;
}
inline void PrimaryVehicleState::set_speed_kmh(uint32_t value) {
  _internal_set_speed_kmh(value);
  // @@protoc_insertion_point(field_set:avisio_ivi.PrimaryVehicleState.speed_kmh)
}

// uint32 engine_rpm = 3;
inline void PrimaryVehicleState::clear_engine_rpm() {
  _impl_.engine_rpm_ = 0u;
}
inline uint32_t PrimaryVehicleState::_internal_engine_rpm() const {
  return _impl_.engine_rpm_;
}
inline uint32_t PrimaryVehicleState::engine_rpm() const {
  // @@protoc_insertion_point(field_get:avisio_ivi.PrimaryVehicleState.engine_rpm)
  return _internal_engine_rpm();
}
inline void PrimaryVehicleState::_internal_set_engine_rpm(uint32_t value) {
  
  _impl_.engine_rpm_ = value;
}
inline void PrimaryVehicleState::set_engine_rpm(uint32_t value) {
  _internal_set_engine_rpm(value);
  // @@protoc_insertion_point(field_set:avisio_ivi.PrimaryVehicleState.engine_rpm)
}

// .avisio_ivi.Gear current_gear = 4;
inline void PrimaryVehicleState::clear_current_gear() {
  _impl_.current_gear_ = 0;
}
inline ::avisio_ivi::Gear PrimaryVehicleState::_internal_current_gear() const {
  return static_cast< ::avisio_ivi::Gear >(_impl_.current_gear_);
}
inline ::avisio_ivi::Gear PrimaryVehicleState::current_gear() const {
  // @@protoc_insertion_point(field_get:avisio_ivi.PrimaryVehicleState.current_gear)
  return _internal_current_gear();
}
inline void PrimaryVehicleState::_internal_set_current_gear(::avisio_ivi::Gear value) {
  
  _impl_.current_gear_ = value;
}
inline void PrimaryVehicleState::set_current_gear(::avisio_ivi::Gear value) {
  _internal_set_current_gear(value);
  // @@protoc_insertion_point(field_set:avisio_ivi.PrimaryVehicleState.current_gear)
}

// uint32 battery_level = 6;
inline void PrimaryVehicleState::clear_battery_level() {
  _impl_.battery_level_ = 0u;
}
inline uint32_t PrimaryVehicleState::_internal_battery_level() const {
  return _impl_.battery_level_;
}
inline uint32_t PrimaryVehicleState::battery_level() const {
  // @@protoc_insertion_point(field_get:avisio_ivi.PrimaryVehicleState.battery_level)
  return _internal_battery_level();
}
inline void PrimaryVehicleState::_internal_set_battery_level(uint32_t value) {
  
  _impl_.battery_level_ = value;
}
inline void PrimaryVehicleState::set_battery_level(uint32_t value) {
  _internal_set_battery_level(value);
  // @@protoc_insertion_point(field_set:avisio_ivi.PrimaryVehicleState.battery_level)
}

// int32 engine_temp_c = 7;
inline void PrimaryVehicleState::clear_engine_temp_c() {
  _impl_.engine_temp_c_ = 0;
}
inline int32_t PrimaryVehicleState::_internal_engine_temp_c() const {
  return _impl_.engine_temp_c_;
}
inline int32_t PrimaryVehicleState::engine_temp_c() const {
  // @@protoc_insertion_point(field_get:avisio_ivi.PrimaryVehicleState.engine_temp_c)
  return _internal_engine_temp_c();
}
inline void PrimaryVehicleState::_internal_set_engine_temp_c(int32_t value) {
  
  _impl_.engine_temp_c_ = value;
}
inline void PrimaryVehicleState::set_engine_temp_c(int32_t value) {
  _internal_set_engine_temp_c(value);
  // @@protoc_insertion_point(field_set:avisio_ivi.PrimaryVehicleState.engine_temp_c)
}

// bool is_charging = 8;
inline void PrimaryVehicleState::clear_is_charging() {
  _impl_.is_charging_ = false;
}
inline bool PrimaryVehicleState::_internal_is_charging() const {
  return _impl_.is_charging_;
}
inline bool PrimaryVehicleState::is_charging() const {
  // @@protoc_insertion_point(field_get:avisio_ivi.PrimaryVehicleState.is_charging)
  return _internal_is_charging();
}
inline void PrimaryVehicleState::_internal_set_is_charging(bool value) {
  
  _impl_.is_charging_ = value;
}
inline void PrimaryVehicleState::set_is_charging(bool value) {
  _internal_set_is_charging(value);
  // @@protoc_insertion_point(field_set:avisio_ivi.PrimaryVehicleState.is_charging)
}

// .avisio_ivi.LightStatus exterior_lights_status = 9;
inline void PrimaryVehicleState::clear_exterior_lights_status() {
  _impl_.exterior_lights_status_ = 0;
}
inline ::avisio_ivi::LightStatus PrimaryVehicleState::_internal_exterior_lights_status() const {
  return static_cast< ::avisio_ivi::LightStatus >(_impl_.exterior_lights_status_);
}
inline ::avisio_ivi::LightStatus PrimaryVehicleState::exterior_lights_status() const {
  // @@protoc_insertion_point(field_get:avisio_ivi.PrimaryVehicleState.exterior_lights_status)
  return _internal_exterior_lights_status();
}
inline void PrimaryVehicleState::_internal_set_exterior_lights_status(::avisio_ivi::LightStatus value) {
  
  _impl_.exterior_lights_status_ = value;
}
inline void PrimaryVehicleState::set_exterior_lights_status(::avisio_ivi::LightStatus value) {
  _internal_set_exterior_lights_status(value);
  // @@protoc_insertion_point(field_set:avisio_ivi.PrimaryVehicleState.exterior_lights_status)
}

// int32 cabin_temp_c = 10;
inline void PrimaryVehicleState::clear_cabin_temp_c() {
  _impl_.cabin_temp_c_ = 0;
}
inline int32_t PrimaryVehicleState::_internal_cabin_temp_c() const {
  return _impl_.cabin_temp_c_;
}
inline int32_t PrimaryVehicleState::cabin_temp_c() const {
  // @@protoc_insertion_point(field_get:avisio_ivi.PrimaryVehicleState.cabin_temp_c)
  return _internal_cabin_temp_c();
}
inline void PrimaryVehicleState::_internal_set_cabin_temp_c(int32_t value) {
  
  _impl_.cabin_temp_c_ = value;
}
inline void PrimaryVehicleState::set_cabin_temp_c(int32_t value) {
  _internal_set_cabin_temp_c(value);
  // @@protoc_insertion_point(field_set:avisio_ivi.PrimaryVehicleState.cabin_temp_c)
}

// bool ac_on = 11;
inline void PrimaryVehicleState::clear_ac_on() {
  _impl_.ac_on_ = false;
}
inline bool PrimaryVehicleState::_internal_ac_on() const {
  return _impl_.ac_on_;
}
inline bool PrimaryVehicleState::ac_on() const {
  // @@protoc_insertion_point(field_get:avisio_ivi.PrimaryVehicleState.ac_on)
  return _internal_ac_on();
}
inline void PrimaryVehicleState::_internal_set_ac_on(bool value) {
  
  _impl_.ac_on_ = value;
}
inline void PrimaryVehicleState::set_ac_on(bool value) {
  _internal_set_ac_on(value);
  // @@protoc_insertion_point(field_set:avisio_ivi.PrimaryVehicleState.ac_on)
}

// bool turn_signal_left = 12;
inline void PrimaryVehicleState::clear_turn_signal_left() {
  _impl_.turn_signal_left_ = false;
}
inline bool PrimaryVehicleState::_internal_turn_signal_left() const {
  return _impl_.turn_signal_left_;
}
inline bool PrimaryVehicleState::turn_signal_left() const {
  // @@protoc_insertion_point(field_get:avisio_ivi.PrimaryVehicleState.turn_signal_left)
  return _internal_turn_signal_left();
}
inline void PrimaryVehicleState::_internal_set_turn_signal_left(bool value) {
  
  _impl_.turn_signal_left_ = value;
}
inline void PrimaryVehicleState::set_turn_signal_left(bool value) {
  _internal_set_turn_signal_left(value);
  // @@protoc_insertion_point(field_set:avisio_ivi.PrimaryVehicleState.turn_signal_left)
}

// bool turn_signal_right = 13;
inline void PrimaryVehicleState::clear_turn_signal_right() {
  _impl_.turn_signal_right_ = false;
}
inline bool PrimaryVehicleState::_internal_turn_signal_right() const {
  return _impl_.turn_signal_right_;
}
inline bool PrimaryVehicleState::turn_signal_right() const {
  // @@protoc_insertion_point(field_get:avisio_ivi.PrimaryVehicleState.turn_signal_right)
  return _internal_turn_signal_right();
}
inline void PrimaryVehicleState::_internal_set_turn_signal_right(bool value) {
  
  _impl_.turn_signal_right_ = value;
}
inline void PrimaryVehicleState::set_turn_signal_right(bool value) {
  _internal_set_turn_signal_right(value);
  // @@protoc_insertion_point(field_set:avisio_ivi.PrimaryVehicleState.turn_signal_right)
}

// bool hazard_lights_on = 14;
inline void PrimaryVehicleState::clear_hazard_lights_on() {
  _impl_.hazard_lights_on_ = false;
}
inline bool PrimaryVehicleState::_internal_hazard_lights_on() const {
  return _impl_.hazard_lights_on_;
}
inline bool PrimaryVehicleState::hazard_lights_on() const {
  // @@protoc_insertion_point(field_get:avisio_ivi.PrimaryVehicleState.hazard_lights_on)
  return _internal_hazard_lights_on();
}
inline void PrimaryVehicleState::_internal_set_hazard_lights_on(bool value) {
  
  _impl_.hazard_lights_on_ = value;
}
inline void PrimaryVehicleState::set_hazard_lights_on(bool value) {
  _internal_set_hazard_lights_on(value);
  // @@protoc_insertion_point(field_set:avisio_ivi.PrimaryVehicleState.hazard_lights_on)
}

// -------------------------------------------------------------------

// SignalLightingStatus

// uint32 timestamp_ms = 1;
inline void SignalLightingStatus::clear_timestamp_ms() {
  _impl_.timestamp_ms_ = 0u;
}
inline uint32_t SignalLightingStatus::_internal_timestamp_ms() const {
  return _impl_.timestamp_ms_;
}
inline uint32_t SignalLightingStatus::timestamp_ms() const {
  // @@protoc_insertion_point(field_get:avisio_ivi.SignalLightingStatus.timestamp_ms)
  return _internal_timestamp_ms();
}
inline void SignalLightingStatus::_internal_set_timestamp_ms(uint32_t value) {
  
  _impl_.timestamp_ms_ = value;
}
inline void SignalLightingStatus::set_timestamp_ms(uint32_t value) {
  _internal_set_timestamp_ms(value);
  // @@protoc_insertion_point(field_set:avisio_ivi.SignalLightingStatus.timestamp_ms)
}

// uint32 turn_signals = 2;
inline void SignalLightingStatus::clear_turn_signals() {
  _impl_.turn_signals_ = 0u;
}
inline uint32_t SignalLightingStatus::_internal_turn_signals() const {
  return _impl_.turn_signals_;
}
inline uint32_t SignalLightingStatus::turn_signals() const {
  // @@protoc_insertion_point(field_get:avisio_ivi.SignalLightingStatus.turn_signals)
  return _internal_turn_signals();
}
inline void SignalLightingStatus::_internal_set_turn_signals(uint32_t value) {
  
  _impl_.turn_signals_ = value;
}
inline void SignalLightingStatus::set_turn_signals(uint32_t value) {
  _internal_set_turn_signals(value);
  // @@protoc_insertion_point(field_set:avisio_ivi.SignalLightingStatus.turn_signals)
}

// uint32 exterior_lights = 3;
inline void SignalLightingStatus::clear_exterior_lights() {
  _impl_.exterior_lights_ = 0u;
}
inline uint32_t SignalLightingStatus::_internal_exterior_lights() const {
  return _impl_.exterior_lights_;
}
inline uint32_t SignalLightingStatus::exterior_lights() const {
  // @@protoc_insertion_point(field_get:avisio_ivi.SignalLightingStatus.exterior_lights)
  return _internal_exterior_lights();
}
inline void SignalLightingStatus::_internal_set_exterior_lights(uint32_t value) {
  
  _impl_.exterior_lights_ = value;
}
inline void SignalLightingStatus::set_exterior_lights(uint32_t value) {
  _internal_set_exterior_lights(value);
  // @@protoc_insertion_point(field_set:avisio_ivi.SignalLightingStatus.exterior_lights)
}

// -------------------------------------------------------------------

// SafetyStatus

// uint32 timestamp_ms = 1;
inline void SafetyStatus::clear_timestamp_ms() {
  _impl_.timestamp_ms_ = 0u;
}
inline uint32_t SafetyStatus::_internal_timestamp_ms() const {
  return _impl_.timestamp_ms_;
}
inline uint32_t SafetyStatus::timestamp_ms() const {
  // @@protoc_insertion_point(field_get:avisio_ivi.SafetyStatus.timestamp_ms)
  return _internal_timestamp_ms();
}
inline void SafetyStatus::_internal_set_timestamp_ms(uint32_t value) {
  
  _impl_.timestamp_ms_ = value;
}
inline void SafetyStatus::set_timestamp_ms(uint32_t value) {
  _internal_set_timestamp_ms(value);
  // @@protoc_insertion_point(field_set:avisio_ivi.SafetyStatus.timestamp_ms)
}

// bool seatbelt_fastened = 2;
inline void SafetyStatus::clear_seatbelt_fastened() {
  _impl_.seatbelt_fastened_ = false;
}
inline bool SafetyStatus::_internal_seatbelt_fastened() const {
  return _impl_.seatbelt_fastened_;
}
inline bool SafetyStatus::seatbelt_fastened() const {
  // @@protoc_insertion_point(field_get:avisio_ivi.SafetyStatus.seatbelt_fastened)
  return _internal_seatbelt_fastened();
}
inline void SafetyStatus::_internal_set_seatbelt_fastened(bool value) {
  
  _impl_.seatbelt_fastened_ = value;
}
inline void SafetyStatus::set_seatbelt_fastened(bool value) {
  _internal_set_seatbelt_fastened(value);
  // @@protoc_insertion_point(field_set:avisio_ivi.SafetyStatus.seatbelt_fastened)
}

// bool airbag_ok = 3;
inline void SafetyStatus::clear_airbag_ok() {
  _impl_.airbag_ok_ = false;
}
inline bool SafetyStatus::_internal_airbag_ok() const {
  return _impl_.airbag_ok_;
}
inline bool SafetyStatus::airbag_ok() const {
  // @@protoc_insertion_point(field_get:avisio_ivi.SafetyStatus.airbag_ok)
  return _internal_airbag_ok();
}
inline void SafetyStatus::_internal_set_airbag_ok(bool value) {
  
  _impl_.airbag_ok_ = value;
}
inline void SafetyStatus::set_airbag_ok(bool value) {
  _internal_set_airbag_ok(value);
  // @@protoc_insertion_point(field_set:avisio_ivi.SafetyStatus.airbag_ok)
}

// bool abs_active = 4;
inline void SafetyStatus::clear_abs_active() {
  _impl_.abs_active_ = false;
}
inline bool SafetyStatus::_internal_abs_active() const {
  return _impl_.abs_active_;
}
inline bool SafetyStatus::abs_active() const {
  // @@protoc_insertion_point(field_get:avisio_ivi.SafetyStatus.abs_active)
  return _internal_abs_active();
}
inline void SafetyStatus::_internal_set_abs_active(bool value) {
  
  _impl_.abs_active_ = value;
}
inline void SafetyStatus::set_abs_active(bool value) {
  _internal_set_abs_active(value);
  // @@protoc_insertion_point(field_set:avisio_ivi.SafetyStatus.abs_active)
}

// bool traction_control = 5;
inline void SafetyStatus::clear_traction_control() {
  _impl_.traction_control_ = false;
}
inline bool SafetyStatus::_internal_traction_control() const {
  return _impl_.traction_control_;
}
inline bool SafetyStatus::traction_control() const {
  // @@protoc_insertion_point(field_get:avisio_ivi.SafetyStatus.traction_control)
  return _internal_traction_control();
}
inline void SafetyStatus::_internal_set_traction_control(bool value) {
  
  _impl_.traction_control_ = value;
}
inline void SafetyStatus::set_traction_control(bool value) {
  _internal_set_traction_control(value);
  // @@protoc_insertion_point(field_set:avisio_ivi.SafetyStatus.traction_control)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace avisio_ivi

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::avisio_ivi::Gear> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::avisio_ivi::Gear>() {
  return ::avisio_ivi::Gear_descriptor();
}
template <> struct is_proto_enum< ::avisio_ivi::LightStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::avisio_ivi::LightStatus>() {
  return ::avisio_ivi::LightStatus_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_avisio_5fivi_2eproto
