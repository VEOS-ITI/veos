// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: avisio_ivi.proto

#include "avisio_ivi.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace avisio_ivi {
PROTOBUF_CONSTEXPR PrimaryVehicleState::PrimaryVehicleState(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.timestamp_ms_)*/0u
  , /*decltype(_impl_.speed_kmh_)*/0u
  , /*decltype(_impl_.engine_rpm_)*/0u
  , /*decltype(_impl_.current_gear_)*/0
  , /*decltype(_impl_.battery_level_)*/0u
  , /*decltype(_impl_.engine_temp_c_)*/0
  , /*decltype(_impl_.exterior_lights_status_)*/0
  , /*decltype(_impl_.cabin_temp_c_)*/0
  , /*decltype(_impl_.is_charging_)*/false
  , /*decltype(_impl_.ac_on_)*/false
  , /*decltype(_impl_.turn_signal_left_)*/false
  , /*decltype(_impl_.turn_signal_right_)*/false
  , /*decltype(_impl_.hazard_lights_on_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PrimaryVehicleStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PrimaryVehicleStateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PrimaryVehicleStateDefaultTypeInternal() {}
  union {
    PrimaryVehicleState _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PrimaryVehicleStateDefaultTypeInternal _PrimaryVehicleState_default_instance_;
PROTOBUF_CONSTEXPR SignalLightingStatus::SignalLightingStatus(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.timestamp_ms_)*/0u
  , /*decltype(_impl_.turn_signals_)*/0u
  , /*decltype(_impl_.exterior_lights_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SignalLightingStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SignalLightingStatusDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SignalLightingStatusDefaultTypeInternal() {}
  union {
    SignalLightingStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SignalLightingStatusDefaultTypeInternal _SignalLightingStatus_default_instance_;
PROTOBUF_CONSTEXPR SafetyStatus::SafetyStatus(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.timestamp_ms_)*/0u
  , /*decltype(_impl_.seatbelt_fastened_)*/false
  , /*decltype(_impl_.airbag_ok_)*/false
  , /*decltype(_impl_.abs_active_)*/false
  , /*decltype(_impl_.traction_control_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SafetyStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SafetyStatusDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SafetyStatusDefaultTypeInternal() {}
  union {
    SafetyStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SafetyStatusDefaultTypeInternal _SafetyStatus_default_instance_;
}  // namespace avisio_ivi
static ::_pb::Metadata file_level_metadata_avisio_5fivi_2eproto[3];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_avisio_5fivi_2eproto[2];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_avisio_5fivi_2eproto = nullptr;

const uint32_t TableStruct_avisio_5fivi_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::avisio_ivi::PrimaryVehicleState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::avisio_ivi::PrimaryVehicleState, _impl_.timestamp_ms_),
  PROTOBUF_FIELD_OFFSET(::avisio_ivi::PrimaryVehicleState, _impl_.speed_kmh_),
  PROTOBUF_FIELD_OFFSET(::avisio_ivi::PrimaryVehicleState, _impl_.engine_rpm_),
  PROTOBUF_FIELD_OFFSET(::avisio_ivi::PrimaryVehicleState, _impl_.current_gear_),
  PROTOBUF_FIELD_OFFSET(::avisio_ivi::PrimaryVehicleState, _impl_.battery_level_),
  PROTOBUF_FIELD_OFFSET(::avisio_ivi::PrimaryVehicleState, _impl_.engine_temp_c_),
  PROTOBUF_FIELD_OFFSET(::avisio_ivi::PrimaryVehicleState, _impl_.is_charging_),
  PROTOBUF_FIELD_OFFSET(::avisio_ivi::PrimaryVehicleState, _impl_.exterior_lights_status_),
  PROTOBUF_FIELD_OFFSET(::avisio_ivi::PrimaryVehicleState, _impl_.cabin_temp_c_),
  PROTOBUF_FIELD_OFFSET(::avisio_ivi::PrimaryVehicleState, _impl_.ac_on_),
  PROTOBUF_FIELD_OFFSET(::avisio_ivi::PrimaryVehicleState, _impl_.turn_signal_left_),
  PROTOBUF_FIELD_OFFSET(::avisio_ivi::PrimaryVehicleState, _impl_.turn_signal_right_),
  PROTOBUF_FIELD_OFFSET(::avisio_ivi::PrimaryVehicleState, _impl_.hazard_lights_on_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::avisio_ivi::SignalLightingStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::avisio_ivi::SignalLightingStatus, _impl_.timestamp_ms_),
  PROTOBUF_FIELD_OFFSET(::avisio_ivi::SignalLightingStatus, _impl_.turn_signals_),
  PROTOBUF_FIELD_OFFSET(::avisio_ivi::SignalLightingStatus, _impl_.exterior_lights_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::avisio_ivi::SafetyStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::avisio_ivi::SafetyStatus, _impl_.timestamp_ms_),
  PROTOBUF_FIELD_OFFSET(::avisio_ivi::SafetyStatus, _impl_.seatbelt_fastened_),
  PROTOBUF_FIELD_OFFSET(::avisio_ivi::SafetyStatus, _impl_.airbag_ok_),
  PROTOBUF_FIELD_OFFSET(::avisio_ivi::SafetyStatus, _impl_.abs_active_),
  PROTOBUF_FIELD_OFFSET(::avisio_ivi::SafetyStatus, _impl_.traction_control_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::avisio_ivi::PrimaryVehicleState)},
  { 19, -1, -1, sizeof(::avisio_ivi::SignalLightingStatus)},
  { 28, -1, -1, sizeof(::avisio_ivi::SafetyStatus)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::avisio_ivi::_PrimaryVehicleState_default_instance_._instance,
  &::avisio_ivi::_SignalLightingStatus_default_instance_._instance,
  &::avisio_ivi::_SafetyStatus_default_instance_._instance,
};

const char descriptor_table_protodef_avisio_5fivi_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020avisio_ivi.proto\022\navisio_ivi\"\352\002\n\023Prima"
  "ryVehicleState\022\024\n\014timestamp_ms\030\001 \001(\r\022\021\n\t"
  "speed_kmh\030\002 \001(\r\022\022\n\nengine_rpm\030\003 \001(\r\022&\n\014c"
  "urrent_gear\030\004 \001(\0162\020.avisio_ivi.Gear\022\025\n\rb"
  "attery_level\030\006 \001(\r\022\025\n\rengine_temp_c\030\007 \001("
  "\005\022\023\n\013is_charging\030\010 \001(\010\0227\n\026exterior_light"
  "s_status\030\t \001(\0162\027.avisio_ivi.LightStatus\022"
  "\024\n\014cabin_temp_c\030\n \001(\005\022\r\n\005ac_on\030\013 \001(\010\022\030\n\020"
  "turn_signal_left\030\014 \001(\010\022\031\n\021turn_signal_ri"
  "ght\030\r \001(\010\022\030\n\020hazard_lights_on\030\016 \001(\010\"[\n\024S"
  "ignalLightingStatus\022\024\n\014timestamp_ms\030\001 \001("
  "\r\022\024\n\014turn_signals\030\002 \001(\r\022\027\n\017exterior_ligh"
  "ts\030\003 \001(\r\"\200\001\n\014SafetyStatus\022\024\n\014timestamp_m"
  "s\030\001 \001(\r\022\031\n\021seatbelt_fastened\030\002 \001(\010\022\021\n\tai"
  "rbag_ok\030\003 \001(\010\022\022\n\nabs_active\030\004 \001(\010\022\030\n\020tra"
  "ction_control\030\005 \001(\010*\214\001\n\004Gear\022\020\n\014GEAR_NEU"
  "TRAL\020\000\022\016\n\nGEAR_FIRST\020\001\022\017\n\013GEAR_SECOND\020\002\022"
  "\016\n\nGEAR_THIRD\020\003\022\017\n\013GEAR_FOURTH\020\004\022\016\n\nGEAR"
  "_FIFTH\020\005\022\016\n\nGEAR_SIXTH\020\006\022\020\n\014GEAR_REVERSE"
  "\020\007*=\n\013LightStatus\022\016\n\nLIGHTS_OFF\020\000\022\r\n\tLIG"
  "HTS_ON\020\001\022\017\n\013LIGHTS_AUTO\020\002b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_avisio_5fivi_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_avisio_5fivi_2eproto = {
    false, false, 833, descriptor_table_protodef_avisio_5fivi_2eproto,
    "avisio_ivi.proto",
    &descriptor_table_avisio_5fivi_2eproto_once, nullptr, 0, 3,
    schemas, file_default_instances, TableStruct_avisio_5fivi_2eproto::offsets,
    file_level_metadata_avisio_5fivi_2eproto, file_level_enum_descriptors_avisio_5fivi_2eproto,
    file_level_service_descriptors_avisio_5fivi_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_avisio_5fivi_2eproto_getter() {
  return &descriptor_table_avisio_5fivi_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_avisio_5fivi_2eproto(&descriptor_table_avisio_5fivi_2eproto);
namespace avisio_ivi {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Gear_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_avisio_5fivi_2eproto);
  return file_level_enum_descriptors_avisio_5fivi_2eproto[0];
}
bool Gear_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LightStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_avisio_5fivi_2eproto);
  return file_level_enum_descriptors_avisio_5fivi_2eproto[1];
}
bool LightStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class PrimaryVehicleState::_Internal {
 public:
};

PrimaryVehicleState::PrimaryVehicleState(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:avisio_ivi.PrimaryVehicleState)
}
PrimaryVehicleState::PrimaryVehicleState(const PrimaryVehicleState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PrimaryVehicleState* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.timestamp_ms_){}
    , decltype(_impl_.speed_kmh_){}
    , decltype(_impl_.engine_rpm_){}
    , decltype(_impl_.current_gear_){}
    , decltype(_impl_.battery_level_){}
    , decltype(_impl_.engine_temp_c_){}
    , decltype(_impl_.exterior_lights_status_){}
    , decltype(_impl_.cabin_temp_c_){}
    , decltype(_impl_.is_charging_){}
    , decltype(_impl_.ac_on_){}
    , decltype(_impl_.turn_signal_left_){}
    , decltype(_impl_.turn_signal_right_){}
    , decltype(_impl_.hazard_lights_on_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.timestamp_ms_, &from._impl_.timestamp_ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.hazard_lights_on_) -
    reinterpret_cast<char*>(&_impl_.timestamp_ms_)) + sizeof(_impl_.hazard_lights_on_));
  // @@protoc_insertion_point(copy_constructor:avisio_ivi.PrimaryVehicleState)
}

inline void PrimaryVehicleState::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.timestamp_ms_){0u}
    , decltype(_impl_.speed_kmh_){0u}
    , decltype(_impl_.engine_rpm_){0u}
    , decltype(_impl_.current_gear_){0}
    , decltype(_impl_.battery_level_){0u}
    , decltype(_impl_.engine_temp_c_){0}
    , decltype(_impl_.exterior_lights_status_){0}
    , decltype(_impl_.cabin_temp_c_){0}
    , decltype(_impl_.is_charging_){false}
    , decltype(_impl_.ac_on_){false}
    , decltype(_impl_.turn_signal_left_){false}
    , decltype(_impl_.turn_signal_right_){false}
    , decltype(_impl_.hazard_lights_on_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

PrimaryVehicleState::~PrimaryVehicleState() {
  // @@protoc_insertion_point(destructor:avisio_ivi.PrimaryVehicleState)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PrimaryVehicleState::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PrimaryVehicleState::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PrimaryVehicleState::Clear() {
// @@protoc_insertion_point(message_clear_start:avisio_ivi.PrimaryVehicleState)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.timestamp_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.hazard_lights_on_) -
      reinterpret_cast<char*>(&_impl_.timestamp_ms_)) + sizeof(_impl_.hazard_lights_on_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PrimaryVehicleState::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 timestamp_ms = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.timestamp_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 speed_kmh = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.speed_kmh_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 engine_rpm = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.engine_rpm_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .avisio_ivi.Gear current_gear = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_current_gear(static_cast<::avisio_ivi::Gear>(val));
        } else
          goto handle_unusual;
        continue;
      // uint32 battery_level = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.battery_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 engine_temp_c = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.engine_temp_c_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool is_charging = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.is_charging_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .avisio_ivi.LightStatus exterior_lights_status = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_exterior_lights_status(static_cast<::avisio_ivi::LightStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // int32 cabin_temp_c = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _impl_.cabin_temp_c_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool ac_on = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          _impl_.ac_on_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool turn_signal_left = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _impl_.turn_signal_left_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool turn_signal_right = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          _impl_.turn_signal_right_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool hazard_lights_on = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _impl_.hazard_lights_on_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PrimaryVehicleState::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:avisio_ivi.PrimaryVehicleState)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 timestamp_ms = 1;
  if (this->_internal_timestamp_ms() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_timestamp_ms(), target);
  }

  // uint32 speed_kmh = 2;
  if (this->_internal_speed_kmh() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_speed_kmh(), target);
  }

  // uint32 engine_rpm = 3;
  if (this->_internal_engine_rpm() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_engine_rpm(), target);
  }

  // .avisio_ivi.Gear current_gear = 4;
  if (this->_internal_current_gear() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_current_gear(), target);
  }

  // uint32 battery_level = 6;
  if (this->_internal_battery_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(6, this->_internal_battery_level(), target);
  }

  // int32 engine_temp_c = 7;
  if (this->_internal_engine_temp_c() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(7, this->_internal_engine_temp_c(), target);
  }

  // bool is_charging = 8;
  if (this->_internal_is_charging() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(8, this->_internal_is_charging(), target);
  }

  // .avisio_ivi.LightStatus exterior_lights_status = 9;
  if (this->_internal_exterior_lights_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      9, this->_internal_exterior_lights_status(), target);
  }

  // int32 cabin_temp_c = 10;
  if (this->_internal_cabin_temp_c() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(10, this->_internal_cabin_temp_c(), target);
  }

  // bool ac_on = 11;
  if (this->_internal_ac_on() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(11, this->_internal_ac_on(), target);
  }

  // bool turn_signal_left = 12;
  if (this->_internal_turn_signal_left() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(12, this->_internal_turn_signal_left(), target);
  }

  // bool turn_signal_right = 13;
  if (this->_internal_turn_signal_right() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(13, this->_internal_turn_signal_right(), target);
  }

  // bool hazard_lights_on = 14;
  if (this->_internal_hazard_lights_on() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(14, this->_internal_hazard_lights_on(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:avisio_ivi.PrimaryVehicleState)
  return target;
}

size_t PrimaryVehicleState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:avisio_ivi.PrimaryVehicleState)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 timestamp_ms = 1;
  if (this->_internal_timestamp_ms() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_timestamp_ms());
  }

  // uint32 speed_kmh = 2;
  if (this->_internal_speed_kmh() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_speed_kmh());
  }

  // uint32 engine_rpm = 3;
  if (this->_internal_engine_rpm() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_engine_rpm());
  }

  // .avisio_ivi.Gear current_gear = 4;
  if (this->_internal_current_gear() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_current_gear());
  }

  // uint32 battery_level = 6;
  if (this->_internal_battery_level() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_battery_level());
  }

  // int32 engine_temp_c = 7;
  if (this->_internal_engine_temp_c() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_engine_temp_c());
  }

  // .avisio_ivi.LightStatus exterior_lights_status = 9;
  if (this->_internal_exterior_lights_status() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_exterior_lights_status());
  }

  // int32 cabin_temp_c = 10;
  if (this->_internal_cabin_temp_c() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_cabin_temp_c());
  }

  // bool is_charging = 8;
  if (this->_internal_is_charging() != 0) {
    total_size += 1 + 1;
  }

  // bool ac_on = 11;
  if (this->_internal_ac_on() != 0) {
    total_size += 1 + 1;
  }

  // bool turn_signal_left = 12;
  if (this->_internal_turn_signal_left() != 0) {
    total_size += 1 + 1;
  }

  // bool turn_signal_right = 13;
  if (this->_internal_turn_signal_right() != 0) {
    total_size += 1 + 1;
  }

  // bool hazard_lights_on = 14;
  if (this->_internal_hazard_lights_on() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PrimaryVehicleState::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PrimaryVehicleState::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PrimaryVehicleState::GetClassData() const { return &_class_data_; }


void PrimaryVehicleState::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PrimaryVehicleState*>(&to_msg);
  auto& from = static_cast<const PrimaryVehicleState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:avisio_ivi.PrimaryVehicleState)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_timestamp_ms() != 0) {
    _this->_internal_set_timestamp_ms(from._internal_timestamp_ms());
  }
  if (from._internal_speed_kmh() != 0) {
    _this->_internal_set_speed_kmh(from._internal_speed_kmh());
  }
  if (from._internal_engine_rpm() != 0) {
    _this->_internal_set_engine_rpm(from._internal_engine_rpm());
  }
  if (from._internal_current_gear() != 0) {
    _this->_internal_set_current_gear(from._internal_current_gear());
  }
  if (from._internal_battery_level() != 0) {
    _this->_internal_set_battery_level(from._internal_battery_level());
  }
  if (from._internal_engine_temp_c() != 0) {
    _this->_internal_set_engine_temp_c(from._internal_engine_temp_c());
  }
  if (from._internal_exterior_lights_status() != 0) {
    _this->_internal_set_exterior_lights_status(from._internal_exterior_lights_status());
  }
  if (from._internal_cabin_temp_c() != 0) {
    _this->_internal_set_cabin_temp_c(from._internal_cabin_temp_c());
  }
  if (from._internal_is_charging() != 0) {
    _this->_internal_set_is_charging(from._internal_is_charging());
  }
  if (from._internal_ac_on() != 0) {
    _this->_internal_set_ac_on(from._internal_ac_on());
  }
  if (from._internal_turn_signal_left() != 0) {
    _this->_internal_set_turn_signal_left(from._internal_turn_signal_left());
  }
  if (from._internal_turn_signal_right() != 0) {
    _this->_internal_set_turn_signal_right(from._internal_turn_signal_right());
  }
  if (from._internal_hazard_lights_on() != 0) {
    _this->_internal_set_hazard_lights_on(from._internal_hazard_lights_on());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PrimaryVehicleState::CopyFrom(const PrimaryVehicleState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:avisio_ivi.PrimaryVehicleState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrimaryVehicleState::IsInitialized() const {
  return true;
}

void PrimaryVehicleState::InternalSwap(PrimaryVehicleState* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PrimaryVehicleState, _impl_.hazard_lights_on_)
      + sizeof(PrimaryVehicleState::_impl_.hazard_lights_on_)
      - PROTOBUF_FIELD_OFFSET(PrimaryVehicleState, _impl_.timestamp_ms_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_ms_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_ms_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PrimaryVehicleState::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_avisio_5fivi_2eproto_getter, &descriptor_table_avisio_5fivi_2eproto_once,
      file_level_metadata_avisio_5fivi_2eproto[0]);
}

// ===================================================================

class SignalLightingStatus::_Internal {
 public:
};

SignalLightingStatus::SignalLightingStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:avisio_ivi.SignalLightingStatus)
}
SignalLightingStatus::SignalLightingStatus(const SignalLightingStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SignalLightingStatus* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.timestamp_ms_){}
    , decltype(_impl_.turn_signals_){}
    , decltype(_impl_.exterior_lights_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.timestamp_ms_, &from._impl_.timestamp_ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.exterior_lights_) -
    reinterpret_cast<char*>(&_impl_.timestamp_ms_)) + sizeof(_impl_.exterior_lights_));
  // @@protoc_insertion_point(copy_constructor:avisio_ivi.SignalLightingStatus)
}

inline void SignalLightingStatus::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.timestamp_ms_){0u}
    , decltype(_impl_.turn_signals_){0u}
    , decltype(_impl_.exterior_lights_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SignalLightingStatus::~SignalLightingStatus() {
  // @@protoc_insertion_point(destructor:avisio_ivi.SignalLightingStatus)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SignalLightingStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SignalLightingStatus::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SignalLightingStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:avisio_ivi.SignalLightingStatus)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.timestamp_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.exterior_lights_) -
      reinterpret_cast<char*>(&_impl_.timestamp_ms_)) + sizeof(_impl_.exterior_lights_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SignalLightingStatus::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 timestamp_ms = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.timestamp_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 turn_signals = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.turn_signals_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 exterior_lights = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.exterior_lights_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SignalLightingStatus::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:avisio_ivi.SignalLightingStatus)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 timestamp_ms = 1;
  if (this->_internal_timestamp_ms() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_timestamp_ms(), target);
  }

  // uint32 turn_signals = 2;
  if (this->_internal_turn_signals() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_turn_signals(), target);
  }

  // uint32 exterior_lights = 3;
  if (this->_internal_exterior_lights() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_exterior_lights(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:avisio_ivi.SignalLightingStatus)
  return target;
}

size_t SignalLightingStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:avisio_ivi.SignalLightingStatus)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 timestamp_ms = 1;
  if (this->_internal_timestamp_ms() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_timestamp_ms());
  }

  // uint32 turn_signals = 2;
  if (this->_internal_turn_signals() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_turn_signals());
  }

  // uint32 exterior_lights = 3;
  if (this->_internal_exterior_lights() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_exterior_lights());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SignalLightingStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SignalLightingStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SignalLightingStatus::GetClassData() const { return &_class_data_; }


void SignalLightingStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SignalLightingStatus*>(&to_msg);
  auto& from = static_cast<const SignalLightingStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:avisio_ivi.SignalLightingStatus)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_timestamp_ms() != 0) {
    _this->_internal_set_timestamp_ms(from._internal_timestamp_ms());
  }
  if (from._internal_turn_signals() != 0) {
    _this->_internal_set_turn_signals(from._internal_turn_signals());
  }
  if (from._internal_exterior_lights() != 0) {
    _this->_internal_set_exterior_lights(from._internal_exterior_lights());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SignalLightingStatus::CopyFrom(const SignalLightingStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:avisio_ivi.SignalLightingStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignalLightingStatus::IsInitialized() const {
  return true;
}

void SignalLightingStatus::InternalSwap(SignalLightingStatus* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SignalLightingStatus, _impl_.exterior_lights_)
      + sizeof(SignalLightingStatus::_impl_.exterior_lights_)
      - PROTOBUF_FIELD_OFFSET(SignalLightingStatus, _impl_.timestamp_ms_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_ms_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_ms_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SignalLightingStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_avisio_5fivi_2eproto_getter, &descriptor_table_avisio_5fivi_2eproto_once,
      file_level_metadata_avisio_5fivi_2eproto[1]);
}

// ===================================================================

class SafetyStatus::_Internal {
 public:
};

SafetyStatus::SafetyStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:avisio_ivi.SafetyStatus)
}
SafetyStatus::SafetyStatus(const SafetyStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SafetyStatus* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.timestamp_ms_){}
    , decltype(_impl_.seatbelt_fastened_){}
    , decltype(_impl_.airbag_ok_){}
    , decltype(_impl_.abs_active_){}
    , decltype(_impl_.traction_control_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.timestamp_ms_, &from._impl_.timestamp_ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.traction_control_) -
    reinterpret_cast<char*>(&_impl_.timestamp_ms_)) + sizeof(_impl_.traction_control_));
  // @@protoc_insertion_point(copy_constructor:avisio_ivi.SafetyStatus)
}

inline void SafetyStatus::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.timestamp_ms_){0u}
    , decltype(_impl_.seatbelt_fastened_){false}
    , decltype(_impl_.airbag_ok_){false}
    , decltype(_impl_.abs_active_){false}
    , decltype(_impl_.traction_control_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SafetyStatus::~SafetyStatus() {
  // @@protoc_insertion_point(destructor:avisio_ivi.SafetyStatus)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SafetyStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SafetyStatus::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SafetyStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:avisio_ivi.SafetyStatus)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.timestamp_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.traction_control_) -
      reinterpret_cast<char*>(&_impl_.timestamp_ms_)) + sizeof(_impl_.traction_control_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SafetyStatus::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 timestamp_ms = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.timestamp_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool seatbelt_fastened = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.seatbelt_fastened_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool airbag_ok = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.airbag_ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool abs_active = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.abs_active_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool traction_control = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.traction_control_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SafetyStatus::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:avisio_ivi.SafetyStatus)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 timestamp_ms = 1;
  if (this->_internal_timestamp_ms() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_timestamp_ms(), target);
  }

  // bool seatbelt_fastened = 2;
  if (this->_internal_seatbelt_fastened() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_seatbelt_fastened(), target);
  }

  // bool airbag_ok = 3;
  if (this->_internal_airbag_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_airbag_ok(), target);
  }

  // bool abs_active = 4;
  if (this->_internal_abs_active() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_abs_active(), target);
  }

  // bool traction_control = 5;
  if (this->_internal_traction_control() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_traction_control(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:avisio_ivi.SafetyStatus)
  return target;
}

size_t SafetyStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:avisio_ivi.SafetyStatus)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 timestamp_ms = 1;
  if (this->_internal_timestamp_ms() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_timestamp_ms());
  }

  // bool seatbelt_fastened = 2;
  if (this->_internal_seatbelt_fastened() != 0) {
    total_size += 1 + 1;
  }

  // bool airbag_ok = 3;
  if (this->_internal_airbag_ok() != 0) {
    total_size += 1 + 1;
  }

  // bool abs_active = 4;
  if (this->_internal_abs_active() != 0) {
    total_size += 1 + 1;
  }

  // bool traction_control = 5;
  if (this->_internal_traction_control() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SafetyStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SafetyStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SafetyStatus::GetClassData() const { return &_class_data_; }


void SafetyStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SafetyStatus*>(&to_msg);
  auto& from = static_cast<const SafetyStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:avisio_ivi.SafetyStatus)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_timestamp_ms() != 0) {
    _this->_internal_set_timestamp_ms(from._internal_timestamp_ms());
  }
  if (from._internal_seatbelt_fastened() != 0) {
    _this->_internal_set_seatbelt_fastened(from._internal_seatbelt_fastened());
  }
  if (from._internal_airbag_ok() != 0) {
    _this->_internal_set_airbag_ok(from._internal_airbag_ok());
  }
  if (from._internal_abs_active() != 0) {
    _this->_internal_set_abs_active(from._internal_abs_active());
  }
  if (from._internal_traction_control() != 0) {
    _this->_internal_set_traction_control(from._internal_traction_control());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SafetyStatus::CopyFrom(const SafetyStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:avisio_ivi.SafetyStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SafetyStatus::IsInitialized() const {
  return true;
}

void SafetyStatus::InternalSwap(SafetyStatus* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SafetyStatus, _impl_.traction_control_)
      + sizeof(SafetyStatus::_impl_.traction_control_)
      - PROTOBUF_FIELD_OFFSET(SafetyStatus, _impl_.timestamp_ms_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_ms_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_ms_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SafetyStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_avisio_5fivi_2eproto_getter, &descriptor_table_avisio_5fivi_2eproto_once,
      file_level_metadata_avisio_5fivi_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace avisio_ivi
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::avisio_ivi::PrimaryVehicleState*
Arena::CreateMaybeMessage< ::avisio_ivi::PrimaryVehicleState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::avisio_ivi::PrimaryVehicleState >(arena);
}
template<> PROTOBUF_NOINLINE ::avisio_ivi::SignalLightingStatus*
Arena::CreateMaybeMessage< ::avisio_ivi::SignalLightingStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::avisio_ivi::SignalLightingStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::avisio_ivi::SafetyStatus*
Arena::CreateMaybeMessage< ::avisio_ivi::SafetyStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::avisio_ivi::SafetyStatus >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
